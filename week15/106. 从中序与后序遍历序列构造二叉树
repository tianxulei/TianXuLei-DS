class Solution {
public:
    unordered_map<int,int>mp;
    TreeNode* build(vector<int>& inorder,vector<int>& postorder,int il,int ir,int pl,int pr){
        if(il>ir) return nullptr;
        TreeNode* root=new TreeNode(postorder[pr]);
        int size=mp[postorder[pr]]-il;
        root->left=build(inorder,postorder,il,mp[postorder[pr]]-1,pl,pl+size-1);
        root->right=build(inorder,postorder,mp[postorder[pr]]+1,ir,pl+size,pr-1);
        return root;
    }
    TreeNode* buildTree(vector<int>& inorder, vector<int>& postorder) {
        int n=inorder.size();
        for(int i=0;i<n;++i) mp[inorder[i]]=i;
        return build(inorder,postorder,0,n-1,0,n-1);
    }
};
